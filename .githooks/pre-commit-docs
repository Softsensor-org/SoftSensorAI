#!/usr/bin/env bash
# Optional pre-commit hook for documentation checks
# To enable: ln -sf ../../.githooks/pre-commit-docs .git/hooks/pre-commit-docs
# Then add to .git/hooks/pre-commit: [ -x .git/hooks/pre-commit-docs ] && .git/hooks/pre-commit-docs

set -euo pipefail

# Colors
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

echo "Running documentation check..."

# Get staged files
STAGED_FILES=$(git diff --cached --name-only)

if [ -z "$STAGED_FILES" ]; then
    exit 0
fi

# Check if documentation check script exists
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
CHECK_SCRIPT="$SCRIPT_DIR/scripts/check_documentation.sh"

if [ ! -x "$CHECK_SCRIPT" ]; then
    echo -e "${YELLOW}⚠ Documentation check script not found, skipping...${NC}"
    exit 0
fi

# Run documentation check
if $CHECK_SCRIPT "$STAGED_FILES"; then
    echo -e "${GREEN}✓ Documentation check passed${NC}"
else
    EXIT_CODE=$?
    if [ $EXIT_CODE -eq 1 ]; then
        echo -e "${RED}✗ Documentation check failed with errors${NC}"
        echo "Please update documentation before committing."
        echo ""
        echo "To bypass this check (not recommended):"
        echo "  git commit --no-verify"
        exit 1
    else
        echo -e "${YELLOW}⚠ Documentation check passed with warnings${NC}"
        echo "Consider updating documentation."
    fi
fi

exit 0
