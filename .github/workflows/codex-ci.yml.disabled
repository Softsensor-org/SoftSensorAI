name: Codex Fix

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      approval_mode:
        description: 'Approval mode for Codex'
        required: false
        default: 'auto-edit'
        type: choice
        options:
          - suggest
          - auto-edit
          - full-auto

jobs:
  codex-fix:
    # Only run if API keys are configured
    if: ${{ secrets.OPENAI_API_KEY != '' || secrets.XAI_API_KEY != '' || secrets.GEMINI_API_KEY != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Codex CLI
        run: npm i -g @openai/codex

      - name: Run Codex to fix issues
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          XAI_BASE_URL: https://api.x.ai/v1
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          # Determine which provider to use based on available keys
          if [ -n "$OPENAI_API_KEY" ]; then
            PROVIDER="openai"
          elif [ -n "$XAI_API_KEY" ]; then
            PROVIDER="xai"
          elif [ -n "$GEMINI_API_KEY" ]; then
            PROVIDER="gemini"
          elif [ -n "$GROQ_API_KEY" ]; then
            PROVIDER="groq"
          elif [ -n "$MISTRAL_API_KEY" ]; then
            PROVIDER="mistral"
          else
            echo "No API keys configured"
            exit 1
          fi

          echo "Using provider: $PROVIDER"

          # Run Codex with appropriate approval mode
          APPROVAL_MODE="${{ github.event.inputs.approval_mode || 'auto-edit' }}"

          codex exec \
            "Run lints, type checks, and tests. Fix any failures with minimal changes. Preserve all existing functionality." \
            --provider "$PROVIDER" \
            --approval-mode "$APPROVAL_MODE" || true

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "No changes made by Codex"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name "codex-bot"
          git config user.email "codex-bot@users.noreply.github.com"
          git add -A
          git commit -m "fix: automated fixes by Codex CLI

          Applied minimal fixes to resolve:
          - Linting issues
          - Type errors
          - Test failures

          Provider: ${{ env.PROVIDER || 'openai' }}
          Mode: ${{ github.event.inputs.approval_mode || 'auto-edit' }}"

      - name: Push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git push origin HEAD:${{ github.head_ref }} || echo "Push failed - may need permissions"

      - name: Comment on PR
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `ðŸ¤– **Codex CLI Applied Fixes**

            Automated fixes have been applied to resolve:
            - Linting issues
            - Type errors
            - Test failures

            Please review the changes and ensure they maintain expected functionality.

            _Provider: ${{ env.PROVIDER || 'openai' }} | Mode: ${{ github.event.inputs.approval_mode || 'auto-edit' }}_`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
